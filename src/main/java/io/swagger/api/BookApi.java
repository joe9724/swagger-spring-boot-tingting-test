/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.12).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.InlineResponse200;
import io.swagger.model.InlineResponse20022;
import io.swagger.model.InlineResponse20023;
import io.swagger.model.InlineResponse2005;
import io.swagger.model.InlineResponse2006;
import io.swagger.model.InlineResponse2007;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-04-03T13:27:38.359Z")

@Api(value = "book", description = "the book API")
public interface BookApi {

    @ApiOperation(value = "购买书本", nickname = "bookbuy", notes = "购买书本", response = InlineResponse2005.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "购买专辑返回结果", response = InlineResponse2005.class),
        @ApiResponse(code = 200, message = "error", response = Error.class) })
    @RequestMapping(value = "/book/buy",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse2005> bookbuy(@ApiParam(value = "版本号") @Valid @RequestParam(value = "version", required = false) String version,@ApiParam(value = "唯一识别号") @Valid @RequestParam(value = "imei", required = false) String imei,@ApiParam(value = "客户端类型") @Valid @RequestParam(value = "client", required = false) String client,@ApiParam(value = "用户id") @Valid @RequestParam(value = "memberId", required = false) String memberId,@ApiParam(value = "书本Id") @Valid @RequestParam(value = "bookId", required = false) Long bookId,@ApiParam(value = "加密串") @Valid @RequestParam(value = "val", required = false) String val,@ApiParam(value = "时间戳(参与加密)") @Valid @RequestParam(value = "ts", required = false) Long ts);


    @ApiOperation(value = "书的章节列表", nickname = "bookchapList", notes = "书的章节列表", response = InlineResponse20022.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "登录成功，返回登录信息", response = InlineResponse20022.class),
        @ApiResponse(code = 200, message = "error", response = Error.class) })
    @RequestMapping(value = "/book/chapterList",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse20022> bookchapList(@ApiParam(value = "开始时间戳") @Valid @RequestParam(value = "startTs", required = false) Long startTs,@ApiParam(value = "结束时间戳") @Valid @RequestParam(value = "endTs", required = false) Long endTs,@ApiParam(value = "标签(如:文学|历史|卡通)") @Valid @RequestParam(value = "tags", required = false) String tags,@ApiParam(value = "年级(如:1-4)") @Valid @RequestParam(value = "grade", required = false) String grade,@ApiParam(value = "版本号") @Valid @RequestParam(value = "version", required = false) String version,@ApiParam(value = "唯一识别号") @Valid @RequestParam(value = "imei", required = false) String imei,@ApiParam(value = "客户端类型") @Valid @RequestParam(value = "client", required = false) String client,@ApiParam(value = "用户id") @Valid @RequestParam(value = "memberId", required = false) String memberId,@ApiParam(value = "书id") @Valid @RequestParam(value = "bookId", required = false) String bookId,@ApiParam(value = "分页索引") @Valid @RequestParam(value = "pageIndex", required = false) Long pageIndex,@ApiParam(value = "分页尺寸") @Valid @RequestParam(value = "pageSize", required = false) Long pageSize);


    @ApiOperation(value = "点赞/取消点赞 书本", nickname = "bookclick", notes = "点赞/取消点赞 书本", response = InlineResponse200.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "返回结果", response = InlineResponse200.class),
        @ApiResponse(code = 200, message = "error", response = Error.class) })
    @RequestMapping(value = "/book/click",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse200> bookclick(@ApiParam(value = "版本号") @Valid @RequestParam(value = "version", required = false) String version,@ApiParam(value = "唯一识别号") @Valid @RequestParam(value = "imei", required = false) String imei,@ApiParam(value = "客户端类型") @Valid @RequestParam(value = "client", required = false) String client,@ApiParam(value = "用户id") @Valid @RequestParam(value = "memberId", required = false) String memberId,@ApiParam(value = "书本Id") @Valid @RequestParam(value = "bookId", required = false) Long bookId,@ApiParam(value = "加密串") @Valid @RequestParam(value = "val", required = false) String val,@ApiParam(value = "时间戳(参与加密)") @Valid @RequestParam(value = "ts", required = false) Long ts,@ApiParam(value = "fav/unfav") @Valid @RequestParam(value = "action", required = false) String action);


    @ApiOperation(value = "根据用户信息匹配书本", nickname = "bookdefault", notes = "根据用户信息匹配书本", response = InlineResponse2007.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "登录成功，返回登录信息", response = InlineResponse2007.class),
        @ApiResponse(code = 200, message = "error", response = Error.class) })
    @RequestMapping(value = "/book/default",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse2007> bookdefault(@ApiParam(value = "开始时间戳") @Valid @RequestParam(value = "startTs", required = false) Long startTs,@ApiParam(value = "结束时间戳") @Valid @RequestParam(value = "endTs", required = false) Long endTs,@ApiParam(value = "标签(如:文学|历史|卡通)") @Valid @RequestParam(value = "tags", required = false) String tags,@ApiParam(value = "年级(如:1-4)") @Valid @RequestParam(value = "grade", required = false) String grade,@ApiParam(value = "加密串") @Valid @RequestParam(value = "val", required = false) String val,@ApiParam(value = "时间戳(参与加密)") @Valid @RequestParam(value = "ts", required = false) String ts,@ApiParam(value = "版本号") @Valid @RequestParam(value = "version", required = false) String version,@ApiParam(value = "唯一识别号") @Valid @RequestParam(value = "imei", required = false) String imei,@ApiParam(value = "客户端类型") @Valid @RequestParam(value = "client", required = false) String client,@ApiParam(value = "用户id") @Valid @RequestParam(value = "memberId", required = false) String memberId,@ApiParam(value = "分页索引") @Valid @RequestParam(value = "pageIndex", required = false) Long pageIndex,@ApiParam(value = "分页尺寸") @Valid @RequestParam(value = "pageSize", required = false) Long pageSize,@ApiParam(value = "是否正常调用还是推荐调用 0=正常 1=推荐") @Valid @RequestParam(value = "isRecommend", required = false) Long isRecommend);


    @ApiOperation(value = "书本详情", nickname = "bookdetail", notes = "书本详情", response = InlineResponse20023.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "登录成功，返回登录信息", response = InlineResponse20023.class),
        @ApiResponse(code = 200, message = "error", response = Error.class) })
    @RequestMapping(value = "/book/detail",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse20023> bookdetail(@ApiParam(value = "版本号") @Valid @RequestParam(value = "version", required = false) String version,@ApiParam(value = "唯一识别号") @Valid @RequestParam(value = "imei", required = false) String imei,@ApiParam(value = "客户端类型") @Valid @RequestParam(value = "client", required = false) String client,@ApiParam(value = "登录名") @Valid @RequestParam(value = "Membername", required = false) String membername,@ApiParam(value = "书本id") @Valid @RequestParam(value = "bookId", required = false) String bookId);


    @ApiOperation(value = "收藏/取消收藏 书本", nickname = "bookfav", notes = "收藏/取消收藏 书本", response = InlineResponse2005.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "购买专辑返回结果", response = InlineResponse2005.class),
        @ApiResponse(code = 200, message = "error", response = Error.class) })
    @RequestMapping(value = "/book/fav",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse2005> bookfav(@ApiParam(value = "版本号") @Valid @RequestParam(value = "version", required = false) String version,@ApiParam(value = "唯一识别号") @Valid @RequestParam(value = "imei", required = false) String imei,@ApiParam(value = "客户端类型") @Valid @RequestParam(value = "client", required = false) String client,@ApiParam(value = "用户id") @Valid @RequestParam(value = "memberId", required = false) String memberId,@ApiParam(value = "书本Id") @Valid @RequestParam(value = "bookId", required = false) Long bookId,@ApiParam(value = "加密串") @Valid @RequestParam(value = "val", required = false) String val,@ApiParam(value = "时间戳(参与加密)") @Valid @RequestParam(value = "ts", required = false) Long ts,@ApiParam(value = "fav/unfav") @Valid @RequestParam(value = "action", required = false) String action);


    @ApiOperation(value = "根据用户信息匹配书本", nickname = "booklist", notes = "根据用户信息匹配书本", response = InlineResponse2006.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "登录成功，返回登录信息", response = InlineResponse2006.class),
        @ApiResponse(code = 200, message = "error", response = Error.class) })
    @RequestMapping(value = "/book/list",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse2006> booklist(@ApiParam(value = "开始时间戳") @Valid @RequestParam(value = "startTs", required = false) Long startTs,@ApiParam(value = "结束时间戳") @Valid @RequestParam(value = "endTs", required = false) Long endTs,@ApiParam(value = "标签(如:文学|历史|卡通)") @Valid @RequestParam(value = "tags", required = false) String tags,@ApiParam(value = "年级(如:1-4)") @Valid @RequestParam(value = "grade", required = false) String grade,@ApiParam(value = "加密串") @Valid @RequestParam(value = "val", required = false) String val,@ApiParam(value = "时间戳(参与加密)") @Valid @RequestParam(value = "ts", required = false) String ts,@ApiParam(value = "版本号") @Valid @RequestParam(value = "version", required = false) String version,@ApiParam(value = "唯一识别号") @Valid @RequestParam(value = "imei", required = false) String imei,@ApiParam(value = "客户端类型") @Valid @RequestParam(value = "client", required = false) String client,@ApiParam(value = "用户id") @Valid @RequestParam(value = "memberId", required = false) String memberId,@ApiParam(value = "分页索引") @Valid @RequestParam(value = "pageIndex", required = false) Long pageIndex,@ApiParam(value = "分页尺寸") @Valid @RequestParam(value = "pageSize", required = false) Long pageSize,@ApiParam(value = "是否正常调用还是推荐调用 0=正常 1=推荐") @Valid @RequestParam(value = "isRecommend", required = false) Long isRecommend);


    @ApiOperation(value = "获取书本点赞人列表", nickname = "booklistclick", notes = "获取书本点赞人列表", response = InlineResponse2006.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "根据用户收藏书本", response = InlineResponse2006.class),
        @ApiResponse(code = 200, message = "error", response = Error.class) })
    @RequestMapping(value = "/book/list/click",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse2006> booklistclick(@ApiParam(value = "开始时间戳") @Valid @RequestParam(value = "startTs", required = false) Long startTs,@ApiParam(value = "结束时间戳") @Valid @RequestParam(value = "endTs", required = false) Long endTs,@ApiParam(value = "标签(如:文学|历史|卡通)") @Valid @RequestParam(value = "tags", required = false) String tags,@ApiParam(value = "年级(如:1-4)") @Valid @RequestParam(value = "grade", required = false) String grade,@ApiParam(value = "加密串") @Valid @RequestParam(value = "val", required = false) String val,@ApiParam(value = "时间戳(参与加密)") @Valid @RequestParam(value = "ts", required = false) String ts,@ApiParam(value = "版本号") @Valid @RequestParam(value = "version", required = false) String version,@ApiParam(value = "唯一识别号") @Valid @RequestParam(value = "imei", required = false) String imei,@ApiParam(value = "客户端类型") @Valid @RequestParam(value = "client", required = false) String client,@ApiParam(value = "用户id") @Valid @RequestParam(value = "memberId", required = false) String memberId,@ApiParam(value = "") @Valid @RequestParam(value = "bookId", required = false) Long bookId,@ApiParam(value = "分页索引") @Valid @RequestParam(value = "pageIndex", required = false) Long pageIndex,@ApiParam(value = "分页尺寸") @Valid @RequestParam(value = "pageSize", required = false) Long pageSize,@ApiParam(value = "是否正常调用还是推荐调用 0=正常 1=推荐") @Valid @RequestParam(value = "isRecommend", required = false) Long isRecommend);


    @ApiOperation(value = "根据用户收藏书本", nickname = "booklistfav", notes = "根据用户收藏书本", response = InlineResponse2006.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "根据用户收藏书本", response = InlineResponse2006.class),
        @ApiResponse(code = 200, message = "error", response = Error.class) })
    @RequestMapping(value = "/book/list/fav",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse2006> booklistfav(@ApiParam(value = "开始时间戳") @Valid @RequestParam(value = "startTs", required = false) Long startTs,@ApiParam(value = "结束时间戳") @Valid @RequestParam(value = "endTs", required = false) Long endTs,@ApiParam(value = "标签(如:文学|历史|卡通)") @Valid @RequestParam(value = "tags", required = false) String tags,@ApiParam(value = "年级(如:1-4)") @Valid @RequestParam(value = "grade", required = false) String grade,@ApiParam(value = "加密串") @Valid @RequestParam(value = "val", required = false) String val,@ApiParam(value = "时间戳(参与加密)") @Valid @RequestParam(value = "ts", required = false) String ts,@ApiParam(value = "版本号") @Valid @RequestParam(value = "version", required = false) String version,@ApiParam(value = "唯一识别号") @Valid @RequestParam(value = "imei", required = false) String imei,@ApiParam(value = "客户端类型") @Valid @RequestParam(value = "client", required = false) String client,@ApiParam(value = "用户id") @Valid @RequestParam(value = "memberId", required = false) String memberId,@ApiParam(value = "分页索引") @Valid @RequestParam(value = "pageIndex", required = false) Long pageIndex,@ApiParam(value = "分页尺寸") @Valid @RequestParam(value = "pageSize", required = false) Long pageSize,@ApiParam(value = "是否正常调用还是推荐调用 0=正常 1=推荐") @Valid @RequestParam(value = "isRecommend", required = false) Long isRecommend);

}
